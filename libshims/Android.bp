cc_library_shared {
    name: "libshim_log",
    srcs: ["libshim_log.cpp"],
    shared_libs: [
        "liblog",
        "libbase",
    ],
}

cc_library_shared {
    name: "libshim_crypto",
    srcs: [
        "libshim_crypto.cpp",
    ],
    shared_libs: [
        "libcrypto",
    ],
}

cc_library_shared {
    name: "libshim_icuuc",
    srcs: [
        "libshim_icuuc.cpp",
    ],
    shared_libs: [
        "libandroidicu",
    ],
}

cc_library_shared {
    name: "libshim_binder",
    srcs: [
        "libshim_binder.cpp",
    ],
    shared_libs: [
        "libbinder",
        "libutils",
    ],
}

cc_library_shared {
    name: "libshim_ui",

    srcs: [
        "ui/GraphicBuffer.cpp",
        "ui/GraphicBufferAllocator.cpp",
        "ui/GraphicBufferMapper.cpp",
		"ui/Fence.cpp"
    ],

    include_dirs: [
        "system/core/libutils",
        "system/core/libgrallocusage/include",
        "frameworks/native/libs/vr/libdvr/include",
    ],

    local_include_dirs: ["include"],

    shared_libs: [
        "android.frameworks.bufferhub@1.0",
        "android.hardware.graphics.allocator@2.0",
        "android.hardware.graphics.allocator@3.0",
        "android.hardware.graphics.common@1.2",
        "android.hardware.graphics.mapper@2.0",
        "android.hardware.graphics.mapper@2.1",
        "android.hardware.graphics.mapper@3.0",
        "libbase",
        "libcutils",
        "libhardware",
        "libhidlbase",
        "libsync",
        "libui",
        "libutils",
        "liblog",
    ],
}

cc_library_shared {
    name: "libshim_gui",

    srcs: [
        "gui/ISensorServer.cpp",
        "gui/SensorManager.cpp",
    ],

    local_include_dirs: ["include"],

    shared_libs: [
        "libbase",
        "libbinder",
        "libsensor",
        "libcutils",
        "libhardware",
        "libhidlbase",
        "libsync",
        "libui",
        "libnativeloader",
        "libgui",
        "libutils",
        "liblog",
    ],
}

cc_library_shared {
    name: "libshim_atomic",
    srcs: [
        "libshim_atomic.cpp",
    ],
    shared_libs: [
        "liblog",
        "libcutils",
        "libbase"
    ],
}

cc_library_shared {
    name: "libshim_alsa",
    srcs: ["libshim_alsa.cpp"],
    local_include_dirs: [ "include" ],
    include_dirs: [
        "external/tinyalsa/include",
        "system/core/include/cutils",
    ],
    shared_libs: [
        "libbase",
        "liblog",
        "libtinyalsa",
    ],
}

cc_library_shared {
    name: "libshim_zygote",
    srcs: ["libshim_zygote.cpp"],
    include_dirs: [
        "frameworks/base/core/jni",
        "system/core/base/include",
    ],
    shared_libs: ["liblog"],
}

cc_library_shared {
    name: "libshim_pthread",
    srcs: ["libshim_pthread.cpp"],
    shared_libs: ["libc"],
    stl: "none",
    sanitize: {
        never: true,
    },
}

cc_library_shared {
    name: "libshim_omx",
    srcs: [
        "libshim_omx.cpp",
    ],
    shared_libs: [
        "libstagefright",
        "libstagefright_omx",
        "libbinder"
    ],
}

cc_library {
    name: "libshim_base",
    srcs: ["libshim_base.cpp"],
    shared_libs: ["libbase"],
}
